/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MovieViewer.java
 *
 * Created on 2009-10-26, 23:23:31
 */
package webcamstudio.components;

import java.awt.Cursor;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import webcamstudio.InfoListener;
import webcamstudio.sources.VideoSourceMovie;

/**
 *
 * @author pballeux
 */
public class MovieViewer extends javax.swing.JDialog implements InfoListener {

    private Viewer viewer = new Viewer();
    private VideoSourceMovie source = null;
    private boolean stopMe = false;
    private javax.swing.DefaultComboBoxModel model = new javax.swing.DefaultComboBoxModel();


    /** Creates new form MovieViewer */
    public MovieViewer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        panViewer.add(viewer, java.awt.BorderLayout.CENTER);

        pack();
        setSize(320, 240 + panTools.getHeight());
        java.util.prefs.Preferences prefs = java.util.prefs.Preferences.userNodeForPackage(this.getClass());
        String[] urls = prefs.get("urls", "").split(",");
        if (urls.length>0){
            model = new javax.swing.DefaultComboBoxModel(urls);
        }
        cboURL.setModel(model);
    }

    private void play() throws MalformedURLException {
        stopMe = false;
        this.setCursor(new Cursor(java.awt.Cursor.WAIT_CURSOR));
        cboURL.setEnabled(false);
        btnViewFeed.setEnabled(false);
        btnStop.setEnabled(true);
        String url = cboURL.getEditor().getItem().toString();
        if (model.getIndexOf(url) == -1) {
            model.addElement(url);
            if (model.getSize() > 10) {
                model.removeElementAt(model.getSize() - 1);
            }
            cboURL.validate();
        }
        source = new VideoSourceMovie(new URL(url));
        source.setListener(this);
        source.setLooping(false);
        new Thread(new Runnable() {

            public void run() {
                source.startSource();
                setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                while (!stopMe) {
                    try {
                        if (source != null) {
                            viewer.updateImage(source.getImage());
                        }
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                    }
                }
                viewer.repaint();

            }
        }).start();
    }

    private void stop() {
        stopMe = true;
        if (source != null) {
            source.stopSource();
            source = null;
        }
        cboURL.setEnabled(true);
        btnViewFeed.setEnabled(true);
        btnStop.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panViewer = new javax.swing.JPanel();
        panTools = new javax.swing.JPanel();
        lblURL = new javax.swing.JLabel();
        btnViewFeed = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        cboURL = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("webcamstudio/Languages"); // NOI18N
        setTitle(bundle.getString("MOVIE_VIEWER")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panViewer.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        panViewer.setName("panViewer"); // NOI18N
        panViewer.setLayout(new java.awt.BorderLayout());

        panTools.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        panTools.setName("panTools"); // NOI18N

        lblURL.setText("URL");
        lblURL.setName("lblURL"); // NOI18N

        btnViewFeed.setText(bundle.getString("PLAY")); // NOI18N
        btnViewFeed.setName("btnViewFeed"); // NOI18N
        btnViewFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFeedActionPerformed(evt);
            }
        });

        btnStop.setText(bundle.getString("STOP")); // NOI18N
        btnStop.setEnabled(false);
        btnStop.setName("btnStop"); // NOI18N
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        cboURL.setEditable(true);
        cboURL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboURL.setName("cboURL"); // NOI18N
        cboURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboURLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panToolsLayout = new javax.swing.GroupLayout(panTools);
        panTools.setLayout(panToolsLayout);
        panToolsLayout.setHorizontalGroup(
            panToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panToolsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panToolsLayout.createSequentialGroup()
                        .addComponent(lblURL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboURL, 0, 253, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panToolsLayout.createSequentialGroup()
                        .addComponent(btnViewFeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStop)))
                .addContainerGap())
        );
        panToolsLayout.setVerticalGroup(
            panToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panToolsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblURL)
                    .addComponent(cboURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStop)
                    .addComponent(btnViewFeed))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
            .addComponent(panTools, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panTools, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(panViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFeedActionPerformed
        try {
            play();
        } catch (MalformedURLException ex) {
            Logger.getLogger(MovieViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewFeedActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        stop();
        java.util.prefs.Preferences prefs = java.util.prefs.Preferences.userNodeForPackage(this.getClass());
        String urls = "";
        for (int i = 0;i<model.getSize();i++){
            urls+= model.getElementAt(i).toString() + ",";
        }
        if (urls.length()>0){
            urls = urls.substring(0, urls.length()-1);
        }
        prefs.put("urls",urls);
        prefs = null;
    }//GEN-LAST:event_formWindowClosing

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        stop();
    }//GEN-LAST:event_btnStopActionPerformed

    private void cboURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboURLActionPerformed
        if (cboURL.isEnabled()) {
            try {
                play();
            } catch (MalformedURLException ex) {
                Logger.getLogger(MovieViewer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboURLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MovieViewer dialog = new MovieViewer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnViewFeed;
    private javax.swing.JComboBox cboURL;
    private javax.swing.JLabel lblURL;
    private javax.swing.JPanel panTools;
    private javax.swing.JPanel panViewer;
    // End of variables declaration//GEN-END:variables

    @Override
    public void info(String info) {
        if (info.equals("ENDOFSTREAM")) {
            System.out.println("End of stream");
            stop();
        }
    }

    @Override
    public void error(String message) {
        Message msg = new Message(null, true);
        msg.setMessage(message);
        msg.pack();
        msg.setLocationRelativeTo(this);
        msg.setVisible(true);
        stop();

    }

    @Override
    public void newTextLine(String line) {
    }
}
