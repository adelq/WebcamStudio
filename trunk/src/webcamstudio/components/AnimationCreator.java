/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AnimationCreator.java
 *
 * Created on 2009-11-06, 05:57:43
 */
package webcamstudio.components;

import java.awt.Component;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.jar.JarEntry;
import java.util.jar.JarOutputStream;
import java.util.jar.Manifest;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.ListModel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author pballeux
 */
public class AnimationCreator extends javax.swing.JDialog {

    private DefaultListModel modelImageList = new DefaultListModel();
    private javax.swing.DefaultListCellRenderer renderer = null;

    /** Creates new form AnimationCreator */
    public AnimationCreator(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        javax.swing.SpinnerNumberModel spinModel = new SpinnerNumberModel(1000, 100, 10000, 100);
        spinFrameRate.setModel(spinModel);
        this.setIconImage(((ImageIcon) mnuFile.getIcon()).getImage());
        lstImages.setModel(modelImageList);

        renderer = new javax.swing.DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(javax.swing.JList list, Object value, int index, boolean selected, boolean focus) {
                Component comp = super.getListCellRendererComponent(list, value, index, selected, focus);
                JLabel label = (JLabel) comp;
                File file = (File) value;
                ImageIcon icon = new ImageIcon(new ImageIcon(file.getAbsolutePath()).getImage().getScaledInstance(32, 32, java.awt.Image.SCALE_FAST));
                label.setIcon(icon);
                label.setText(file.getName());
                return comp;
            }
        };
        lstImages.setCellRenderer(renderer);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panDetails = new javax.swing.JPanel();
        lblCreatorName = new javax.swing.JLabel();
        lblComment = new javax.swing.JLabel();
        txtCreatorName = new javax.swing.JTextField();
        txtComment = new javax.swing.JTextField();
        lblFrameRate = new javax.swing.JLabel();
        spinFrameRate = new javax.swing.JSpinner();
        panListImages = new javax.swing.JPanel();
        lblImageList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstImages = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        panLists = new javax.swing.JPanel();
        tabLists = new javax.swing.JTabbedPane();
        lblPlayList = new javax.swing.JLabel();
        btnListAdd = new javax.swing.JButton();
        btnListRemove = new javax.swing.JButton();
        btnListUp = new javax.swing.JButton();
        btnListDown = new javax.swing.JButton();
        btnListRemoveList = new javax.swing.JButton();
        btnListAddList = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuExport = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("webcamstudio/Languages"); // NOI18N
        setTitle(bundle.getString("ANIMATION_CREATOR")); // NOI18N

        panDetails.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        panDetails.setName("panDetails"); // NOI18N

        lblCreatorName.setText(bundle.getString("CREATOR_NAME")); // NOI18N
        lblCreatorName.setName("lblCreatorName"); // NOI18N

        lblComment.setText(bundle.getString("COMMENT")); // NOI18N
        lblComment.setName("lblComment"); // NOI18N

        txtCreatorName.setName("txtCreatorName"); // NOI18N

        txtComment.setName("txtComment"); // NOI18N

        lblFrameRate.setText(bundle.getString("FRAME_LENGTH")); // NOI18N
        lblFrameRate.setName("lblFrameRate"); // NOI18N

        spinFrameRate.setName("spinFrameRate"); // NOI18N

        javax.swing.GroupLayout panDetailsLayout = new javax.swing.GroupLayout(panDetails);
        panDetails.setLayout(panDetailsLayout);
        panDetailsLayout.setHorizontalGroup(
            panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreatorName)
                    .addComponent(lblComment)
                    .addComponent(lblFrameRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtComment, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(txtCreatorName, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(spinFrameRate, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                .addContainerGap())
        );
        panDetailsLayout.setVerticalGroup(
            panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatorName)
                    .addComponent(txtCreatorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComment)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFrameRate)
                    .addComponent(spinFrameRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        panListImages.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        panListImages.setName("panListImages"); // NOI18N

        lblImageList.setText(bundle.getString("IMAGE_LIST")); // NOI18N
        lblImageList.setName("lblImageList"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstImages.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstImages.setName("lstImages"); // NOI18N
        lstImages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstImagesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstImages);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/list-add.png"))); // NOI18N
        btnAdd.setName("btnAdd"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/list-remove.png"))); // NOI18N
        btnRemove.setEnabled(false);
        btnRemove.setName("btnRemove"); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panListImagesLayout = new javax.swing.GroupLayout(panListImages);
        panListImages.setLayout(panListImagesLayout);
        panListImagesLayout.setHorizontalGroup(
            panListImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panListImagesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panListImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addComponent(lblImageList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panListImagesLayout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)))
                .addContainerGap())
        );
        panListImagesLayout.setVerticalGroup(
            panListImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListImagesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImageList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panListImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRemove)
                    .addComponent(btnAdd))
                .addContainerGap())
        );

        panLists.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        panLists.setName("panLists"); // NOI18N

        tabLists.setName("tabLists"); // NOI18N

        lblPlayList.setText(bundle.getString("LISTS")); // NOI18N
        lblPlayList.setName("lblPlayList"); // NOI18N

        btnListAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/list-add.png"))); // NOI18N
        btnListAdd.setEnabled(false);
        btnListAdd.setName("btnListAdd"); // NOI18N
        btnListAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAddActionPerformed(evt);
            }
        });

        btnListRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/list-remove.png"))); // NOI18N
        btnListRemove.setEnabled(false);
        btnListRemove.setName("btnListRemove"); // NOI18N
        btnListRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListRemoveActionPerformed(evt);
            }
        });

        btnListUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/go-up.png"))); // NOI18N
        btnListUp.setEnabled(false);
        btnListUp.setName("btnListUp"); // NOI18N
        btnListUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListUpActionPerformed(evt);
            }
        });

        btnListDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/go-down.png"))); // NOI18N
        btnListDown.setEnabled(false);
        btnListDown.setName("btnListDown"); // NOI18N
        btnListDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListDownActionPerformed(evt);
            }
        });

        btnListRemoveList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/process-stop.png"))); // NOI18N
        btnListRemoveList.setEnabled(false);
        btnListRemoveList.setName("btnListRemoveList"); // NOI18N
        btnListRemoveList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListRemoveListActionPerformed(evt);
            }
        });

        btnListAddList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/document-new.png"))); // NOI18N
        btnListAddList.setName("btnListAddList"); // NOI18N
        btnListAddList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAddListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panListsLayout = new javax.swing.GroupLayout(panLists);
        panLists.setLayout(panListsLayout);
        panListsLayout.setHorizontalGroup(
            panListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabLists, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addComponent(lblPlayList)
                    .addGroup(panListsLayout.createSequentialGroup()
                        .addComponent(btnListAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListDown)
                        .addGap(6, 6, 6)
                        .addComponent(btnListAddList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListRemoveList)))
                .addContainerGap())
        );
        panListsLayout.setVerticalGroup(
            panListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblPlayList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabLists, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnListAdd)
                        .addComponent(btnListRemove)
                        .addComponent(btnListUp)
                        .addComponent(btnListDown)
                        .addComponent(btnListRemoveList))
                    .addComponent(btnListAddList))
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        mnuFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/user-info.png"))); // NOI18N
        mnuFile.setText(bundle.getString("ANIMATION")); // NOI18N
        mnuFile.setName("mnuFile"); // NOI18N

        mnuExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/webcamstudio/resources/tango/document-save-as.png"))); // NOI18N
        mnuExport.setText(bundle.getString("EXPORT")); // NOI18N
        mnuExport.setName("mnuExport"); // NOI18N
        mnuExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExportActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExport);

        menuBar.add(mnuFile);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panListImages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panLists, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panListImages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panLists, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(".");
        chooser.setToolTipText(java.util.ResourceBundle.getBundle("webcamstudio/Languages").getString("SELECT_YOUR_IMAGE_FILE"));
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        javax.swing.filechooser.FileFilter filter = null;
        chooser.setMultiSelectionEnabled(false);
        filter = new javax.swing.filechooser.FileNameExtensionFilter("PNG", "PNG", "png");
        chooser.setMultiSelectionEnabled(true);
        chooser.setFileFilter(filter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            java.io.File[] f = chooser.getSelectedFiles();
            String temp = "";
            if (f != null && f.length > 0) {
                for (int i = 0; i < f.length; i++) {
                    modelImageList.addElement(f[i]);
                }
            } else {
                java.io.File file = chooser.getSelectedFile();
                if (file != null) {
                    modelImageList.addElement(file);
                }
            }
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void lstImagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstImagesMouseClicked
        btnRemove.setEnabled(lstImages.getSelectedValue() != null);
    }//GEN-LAST:event_lstImagesMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        Object[] list = lstImages.getSelectedValues();
        if (list != null) {
            for (Object o : list) {
                modelImageList.removeElement(o);
                //Check if that file is in the lists...
                for (int j = 0; j < tabLists.getComponentCount(); j++) {
                    JList flist = (JList) ((JViewport) ((JScrollPane) tabLists.getComponentAt(j)).getComponent(0)).getComponent(0);
                    if (flist != null) {
                        ListModel model = flist.getModel();
                        DefaultListModel modelnew = new DefaultListModel();
                        for (int i = 0; i < model.getSize(); i++) {
                            modelnew.addElement(model.getElementAt(i));
                        }
                        modelnew.removeElement(o);
                        flist.setModel(modelnew);
                        flist.validate();
                    }
                }
            }
            lstImages.validate();
            btnRemove.setEnabled(false);
        }


    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnListAddListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAddListActionPerformed
        //Adding a new list...
        JList list = new JList();
        javax.swing.JScrollPane scroller = new javax.swing.JScrollPane(list);
        list.setCellRenderer(renderer);
        list.setAutoscrolls(true);

        tabLists.add("LST " + tabLists.getComponentCount(), scroller);
        btnListRemove.setEnabled(true);
        btnListAddList.setEnabled(true);
        btnListDown.setEnabled(true);
        btnListUp.setEnabled(true);
        btnListRemoveList.setEnabled(true);
        btnListAdd.setEnabled(true);


    }//GEN-LAST:event_btnListAddListActionPerformed

    private void btnListAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAddActionPerformed
        JList list = (JList) ((JViewport) ((JScrollPane) tabLists.getComponentAt(tabLists.getSelectedIndex())).getComponent(0)).getComponent(0);
        if (list != null) {
            ListModel model = list.getModel();
            DefaultListModel modelnew = new DefaultListModel();
            for (int i = 0; i < model.getSize(); i++) {
                modelnew.addElement(model.getElementAt(i));
            }
            Object[] objects = lstImages.getSelectedValues();
            for (Object o : objects) {
                modelnew.addElement(o);
            }
            list.setModel(modelnew);
            list.validate();
        }

    }//GEN-LAST:event_btnListAddActionPerformed

    private void btnListRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListRemoveActionPerformed
        JList list = (JList) ((JViewport) ((JScrollPane) tabLists.getComponentAt(tabLists.getSelectedIndex())).getComponent(0)).getComponent(0);
        if (list != null) {
            ListModel model = list.getModel();
            DefaultListModel modelnew = new DefaultListModel();
            for (int i = 0; i < model.getSize(); i++) {
                modelnew.addElement(model.getElementAt(i));
            }

            Object[] objects = list.getSelectedValues();
            for (Object o : objects) {
                modelnew.removeElement(o);
            }
            list.setModel(modelnew);
            list.validate();
        }

    }//GEN-LAST:event_btnListRemoveActionPerformed

    private void btnListUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListUpActionPerformed
        JList list = (JList) ((JViewport) ((JScrollPane) tabLists.getComponentAt(tabLists.getSelectedIndex())).getComponent(0)).getComponent(0);
        if (list != null) {
            ListModel model = list.getModel();
            DefaultListModel modelnew = new DefaultListModel();
            for (int i = 0; i < model.getSize(); i++) {
                modelnew.addElement(model.getElementAt(i));
            }

            int[] objects = list.getSelectedIndices();
            for (int i : objects) {
                Object o = modelnew.get(i);
                if (i > 0) {
                    modelnew.removeElement(o);
                    modelnew.insertElementAt(o, i - 1);
                }
            }
            list.setModel(modelnew);
            list.validate();
        }
    }//GEN-LAST:event_btnListUpActionPerformed

    private void btnListDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListDownActionPerformed
        JList list = (JList) ((JViewport) ((JScrollPane) tabLists.getComponentAt(tabLists.getSelectedIndex())).getComponent(0)).getComponent(0);
        if (list != null) {
            ListModel model = list.getModel();
            DefaultListModel modelnew = new DefaultListModel();
            for (int i = 0; i < model.getSize(); i++) {
                modelnew.addElement(model.getElementAt(i));
            }

            int[] objects = list.getSelectedIndices();
            for (int i : objects) {
                Object o = modelnew.get(i);
                if (i < modelnew.getSize() - 1) {
                    modelnew.removeElement(o);
                    modelnew.insertElementAt(o, i + 1);
                }
            }
            list.setModel(modelnew);
            list.validate();
        }
    }//GEN-LAST:event_btnListDownActionPerformed

    private void createJarArchive(File archiveFile, File[] tobeJared) {
        try {
            byte buffer[] = new byte[1024];
            // Open archive file
            FileOutputStream stream = new FileOutputStream(archiveFile);

            Manifest manifest = new Manifest();
            manifest.getMainAttributes().putValue("Manifest-Version", "1.1");
            manifest.getMainAttributes().putValue("Created-By", txtCreatorName.getText());
            manifest.getMainAttributes().putValue("Comment", txtComment.getText());
            manifest.getMainAttributes().putValue("Speed", spinFrameRate.getValue().toString());

            // Adding playlist...

            for (int i = 0; i < tabLists.getComponentCount(); i++) {
                JList list = (JList) ((JViewport) ((JScrollPane) tabLists.getComponentAt(i)).getComponent(0)).getComponent(0);
                if (list != null) {
                    ListModel model = list.getModel();
                    String filelist = "";
                    for (int j = 0; j < model.getSize(); j++) {
                        filelist += ((File) model.getElementAt(j)).getName() + ",";
                    }
                    filelist = filelist.substring(0, filelist.length() - 1);
                    manifest.getMainAttributes().putValue("Playlist" + (i + 1), filelist);
                }
            }

            JarOutputStream out = new JarOutputStream(stream, manifest);

            for (int i = 0; i < tobeJared.length; i++) {
                if (tobeJared[i] == null || !tobeJared[i].exists() || tobeJared[i].isDirectory()) {
                    continue; // Just in case...
                }
                System.out.println("Adding " + tobeJared[i].getName());

                // Add archive entry
                JarEntry jarAdd = new JarEntry(tobeJared[i].getName());
                jarAdd.setTime(tobeJared[i].lastModified());
                out.putNextEntry(jarAdd);

                // Write file to archive
                FileInputStream in = new FileInputStream(tobeJared[i]);
                while (true) {
                    int nRead = in.read(buffer, 0, buffer.length);
                    if (nRead <= 0) {
                        break;
                    }
                    out.write(buffer, 0, nRead);
                }
                in.close();
            }


            out.close();
            stream.close();

            System.out.println("Adding completed OK");
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Error: " + ex.getMessage());
        }

    }
    private void btnListRemoveListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListRemoveListActionPerformed
        int index = tabLists.getSelectedIndex();
        tabLists.remove(index);
        tabLists.validate();
        btnListRemove.setEnabled(tabLists.getComponentCount() > 0);
        btnListAddList.setEnabled(tabLists.getComponentCount() > 0);
        btnListDown.setEnabled(tabLists.getComponentCount() > 0);
        btnListUp.setEnabled(tabLists.getComponentCount() > 0);
        btnListRemoveList.setEnabled(tabLists.getComponentCount() > 0);
        btnListAdd.setEnabled(tabLists.getComponentCount() > 0);
    }//GEN-LAST:event_btnListRemoveListActionPerformed

    private void mnuExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExportActionPerformed
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(".");
        chooser.setToolTipText(java.util.ResourceBundle.getBundle("webcamstudio/Languages").getString("SELECT_YOUR_ANIMATION_FILE"));
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        javax.swing.filechooser.FileFilter filter = null;
        chooser.setMultiSelectionEnabled(false);
        filter = new javax.swing.filechooser.FileNameExtensionFilter("ANM", "ANM", "anm");
        chooser.setMultiSelectionEnabled(false);
        chooser.setFileFilter(filter);
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File anm = chooser.getSelectedFile();
            if (!anm.getName().endsWith("anm")){
                anm = new File(anm.getAbsolutePath()+".anm");
            }
            Object[] list = modelImageList.toArray();
            File[] files = new File[list.length];
            for (int i = 0; i < list.length; i++) {
                files[i] = (File) list[i];
            }
            createJarArchive(anm, files);
        }
    }//GEN-LAST:event_mnuExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AnimationCreator dialog = new AnimationCreator(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnListAdd;
    private javax.swing.JButton btnListAddList;
    private javax.swing.JButton btnListDown;
    private javax.swing.JButton btnListRemove;
    private javax.swing.JButton btnListRemoveList;
    private javax.swing.JButton btnListUp;
    private javax.swing.JButton btnRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblCreatorName;
    private javax.swing.JLabel lblFrameRate;
    private javax.swing.JLabel lblImageList;
    private javax.swing.JLabel lblPlayList;
    private javax.swing.JList lstImages;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnuExport;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JPanel panDetails;
    private javax.swing.JPanel panListImages;
    private javax.swing.JPanel panLists;
    private javax.swing.JSpinner spinFrameRate;
    private javax.swing.JTabbedPane tabLists;
    private javax.swing.JTextField txtComment;
    private javax.swing.JTextField txtCreatorName;
    // End of variables declaration//GEN-END:variables
}
