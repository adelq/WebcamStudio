/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlDesktop.java
 *
 * Created on 2010-01-12, 23:50:21
 */
package webcamstudio.controls;

import webcamstudio.sources.VideoSource;

/**
 *
 * @author pballeux
 */
public class ControlReload extends javax.swing.JPanel implements Controls {

    VideoSource source = null;
    String label = "Reload";

    /** Creates new form ControlDesktop */
    public ControlReload(VideoSource source) {
        initComponents();
        this.source = source;
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("webcamstudio.Languages");
        label = bundle.getString("RELOAD");
        slideMinutes.setValue((int)(source.getUpdateTimeLapse()/1000/60));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUpdateInterval = new javax.swing.JLabel();
        slideMinutes = new javax.swing.JSlider();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("webcamstudio/Languages"); // NOI18N
        lblUpdateInterval.setText(bundle.getString("UPDATE_INTERVAL")); // NOI18N
        lblUpdateInterval.setName("lblUpdateInterval"); // NOI18N

        slideMinutes.setMajorTickSpacing(5);
        slideMinutes.setMaximum(30);
        slideMinutes.setMinorTickSpacing(1);
        slideMinutes.setPaintLabels(true);
        slideMinutes.setPaintTicks(true);
        slideMinutes.setSnapToTicks(true);
        slideMinutes.setName("slideMinutes"); // NOI18N
        slideMinutes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideMinutesStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUpdateInterval)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slideMinutes, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblUpdateInterval))
                    .addComponent(slideMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void slideMinutesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideMinutesStateChanged
        source.setUpdateTimeLapse(slideMinutes.getValue()*60*1000);
        
    }//GEN-LAST:event_slideMinutesStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblUpdateInterval;
    private javax.swing.JSlider slideMinutes;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getLabel() {
        return label;
    }

    @Override
    public void removeControl() {
        source=null;
    }
}
