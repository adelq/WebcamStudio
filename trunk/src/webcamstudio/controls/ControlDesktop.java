/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlDesktop.java
 *
 * Created on 2010-01-12, 23:50:21
 */

package webcamstudio.controls;

import webcamstudio.components.DesktopCaptureArea;
import webcamstudio.components.SourceListener;
import webcamstudio.sources.VideoSourceDesktop;

/**
 *
 * @author pballeux
 */
public class ControlDesktop extends javax.swing.JPanel implements Controls {

    VideoSourceDesktop source = null;
    String label = "Capture";
    private SourceListener listener=null;
    /** Creates new form ControlDesktop */
    public ControlDesktop(VideoSourceDesktop source) {
        initComponents();
        this.source=source;
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("webcamstudio.Languages");
        label = bundle.getString("FORMAT");
        spinX.setValue(source.getShowAtX());
        spinY.setValue(source.getShowAtY());
        spinWidth.setValue(source.getCaptureWidth());
        spinHeight.setValue(source.getCaptureHeight());
        chkShowMouseCursor.setSelected(source.isShowMouseCursor());
        chkFollowMouseCursor.setSelected(source.isFollowingMouse());
        slideFramerate.setValue(source.getFrameRate());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spinX = new javax.swing.JSpinner();
        lblX = new javax.swing.JLabel();
        lblY = new javax.swing.JLabel();
        spinY = new javax.swing.JSpinner();
        lblWidth = new javax.swing.JLabel();
        spinWidth = new javax.swing.JSpinner();
        lblHeight = new javax.swing.JLabel();
        spinHeight = new javax.swing.JSpinner();
        chkShowMouseCursor = new javax.swing.JCheckBox();
        chkFollowMouseCursor = new javax.swing.JCheckBox();
        slideFramerate = new javax.swing.JSlider();
        lblFramrate = new javax.swing.JLabel();
        btnSelectArea = new javax.swing.JButton();

        spinX.setName("spinX"); // NOI18N
        spinX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinXStateChanged(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("webcamstudio/Languages"); // NOI18N
        lblX.setText(bundle.getString("XAXIS")); // NOI18N
        lblX.setName("lblX"); // NOI18N

        lblY.setText(bundle.getString("YAXIS")); // NOI18N
        lblY.setName("lblY"); // NOI18N

        spinY.setName("spinY"); // NOI18N
        spinY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinYStateChanged(evt);
            }
        });

        lblWidth.setText(bundle.getString("WIDTH")); // NOI18N
        lblWidth.setName("lblWidth"); // NOI18N

        spinWidth.setName("spinWidth"); // NOI18N
        spinWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinWidthStateChanged(evt);
            }
        });

        lblHeight.setText(bundle.getString("HEIGHT")); // NOI18N
        lblHeight.setName("lblHeight"); // NOI18N

        spinHeight.setName("spinHeight"); // NOI18N
        spinHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinHeightStateChanged(evt);
            }
        });

        chkShowMouseCursor.setText(bundle.getString("SHOWCURSOR")); // NOI18N
        chkShowMouseCursor.setName("chkShowMouseCursor"); // NOI18N
        chkShowMouseCursor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowMouseCursorActionPerformed(evt);
            }
        });

        chkFollowMouseCursor.setText(bundle.getString("FOLLOW_MOUSE")); // NOI18N
        chkFollowMouseCursor.setName("chkFollowMouseCursor"); // NOI18N
        chkFollowMouseCursor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFollowMouseCursorActionPerformed(evt);
            }
        });

        slideFramerate.setMajorTickSpacing(15);
        slideFramerate.setMaximum(30);
        slideFramerate.setMinorTickSpacing(5);
        slideFramerate.setPaintLabels(true);
        slideFramerate.setPaintTicks(true);
        slideFramerate.setValue(15);
        slideFramerate.setName("slideFramerate"); // NOI18N
        slideFramerate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideFramerateStateChanged(evt);
            }
        });

        lblFramrate.setText(bundle.getString("FRAMERATE")); // NOI18N
        lblFramrate.setName("lblFramrate"); // NOI18N

        btnSelectArea.setText(bundle.getString("SELECT_AREA")); // NOI18N
        btnSelectArea.setName("btnSelectArea"); // NOI18N
        btnSelectArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAreaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkFollowMouseCursor)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFramrate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slideFramerate, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblX)
                                    .addComponent(lblWidth))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinWidth)
                                    .addComponent(spinX, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblY)
                                    .addComponent(lblHeight)))
                            .addComponent(chkShowMouseCursor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSelectArea)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(spinHeight)
                                .addComponent(spinY, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblX)
                    .addComponent(spinX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblY)
                    .addComponent(spinY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWidth)
                    .addComponent(lblHeight)
                    .addComponent(spinHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkShowMouseCursor)
                    .addComponent(btnSelectArea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFollowMouseCursor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFramrate)
                    .addComponent(slideFramerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void spinXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinXStateChanged
        source.setCaptureAtX((Integer)spinX.getValue());
    }//GEN-LAST:event_spinXStateChanged

    private void spinYStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinYStateChanged
        source.setCaptureAtY((Integer)spinY.getValue());
    }//GEN-LAST:event_spinYStateChanged

    private void spinWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinWidthStateChanged
        source.setCaptureWidth((Integer)spinWidth.getValue());
    }//GEN-LAST:event_spinWidthStateChanged

    private void spinHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinHeightStateChanged
        source.setCaptureHeight((Integer)spinHeight.getValue());
    }//GEN-LAST:event_spinHeightStateChanged

    private void chkShowMouseCursorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowMouseCursorActionPerformed
        source.setShowMouseCursor(chkShowMouseCursor.isSelected());
    }//GEN-LAST:event_chkShowMouseCursorActionPerformed

    private void chkFollowMouseCursorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFollowMouseCursorActionPerformed
        source.setFollowMouse(chkFollowMouseCursor.isSelected());
    }//GEN-LAST:event_chkFollowMouseCursorActionPerformed

    private void slideFramerateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideFramerateStateChanged
        source.setFrameRate(slideFramerate.getValue());
}//GEN-LAST:event_slideFramerateStateChanged

    private void btnSelectAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAreaActionPerformed
        DesktopCaptureArea d = new DesktopCaptureArea(null,true);
        d.setSize(source.getCaptureWidth(), source.getCaptureHeight());
        d.setLocation(source.getCaptureAtX(), source.getCaptureAtY());
        d.setVisible(true);
        source.setCaptureAtX((int)d.getX());
        source.setCaptureAtY((int)d.getY());
        source.setCaptureWidth(d.getWidth());
        source.setCaptureHeight(d.getHeight());
        source.setFollowMouse(false);
        spinX.setValue(source.getCaptureAtX());
        spinY.setValue(source.getCaptureAtY());
        spinWidth.setValue(source.getCaptureWidth());
        spinHeight.setValue(source.getCaptureHeight());
        chkFollowMouseCursor.setSelected(source.isFollowingMouse());

    }//GEN-LAST:event_btnSelectAreaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectArea;
    private javax.swing.JCheckBox chkFollowMouseCursor;
    private javax.swing.JCheckBox chkShowMouseCursor;
    private javax.swing.JLabel lblFramrate;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JLabel lblX;
    private javax.swing.JLabel lblY;
    private javax.swing.JSlider slideFramerate;
    private javax.swing.JSpinner spinHeight;
    private javax.swing.JSpinner spinWidth;
    private javax.swing.JSpinner spinX;
    private javax.swing.JSpinner spinY;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getLabel() {
        return label;
    }

    @Override
    public void removeControl() {
        source=null;
    }

    @Override
    public void setListener(SourceListener l) {
        listener=l;
    }

}
